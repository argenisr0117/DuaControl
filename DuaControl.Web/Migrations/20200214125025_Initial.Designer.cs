// <auto-generated />
using System;
using DuaControl.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DuaControl.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200214125025_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Adjunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentName")
                        .HasColumnType("VARCHAR(120)")
                        .HasMaxLength(120);

                    b.Property<string>("DocumentUrl");

                    b.Property<int?>("FacturaId");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("User")
                        .HasColumnType("VARCHAR(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.ToTable("Adjuntos");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Cliente", b =>
                {
                    b.Property<string>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteId");

                    b.Property<string>("Details");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("InvoiceSystem")
                        .HasMaxLength(15);

                    b.Property<string>("InvoiceUser")
                        .HasMaxLength(15);

                    b.Property<int?>("PortId");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PortId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Puerto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Puertos");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastLoginDate");

                    b.Property<string>("LastName");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_UserRoles");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Adjunto", b =>
                {
                    b.HasOne("DuaControl.Web.Data.Entities.Factura", "Factura")
                        .WithMany("Adjuntos")
                        .HasForeignKey("FacturaId");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.Factura", b =>
                {
                    b.HasOne("DuaControl.Web.Data.Entities.Cliente", "Client")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("DuaControl.Web.Data.Entities.Puerto", "Port")
                        .WithMany("Facturas")
                        .HasForeignKey("PortId");
                });

            modelBuilder.Entity("DuaControl.Web.Data.Entities.UserRole", b =>
                {
                    b.HasOne("DuaControl.Web.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserRoles_Roles")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DuaControl.Web.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserRoles_Users")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
